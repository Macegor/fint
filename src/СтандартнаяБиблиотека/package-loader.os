
Процедура ПриЗагрузкеБиблиотеки(Путь, СтандартнаяОбработка, Отказ) 

	СтандартнаяОбработка = Ложь;
	
	ФайлПуть = Новый Файл(Путь);
	ИмяБиблиотеки = ФайлПуть.ИмяБезРасширения;
	
    ФайлОписания = Новый Файл(ОбъединитьПути(Путь, "Описание.os"));

    Если ФайлОписания.Существует() Тогда
        ДобавитьКласс(ФайлОписания.ПолноеИмя, СтрШаблон("БиблиотекаФИНТ_%1_Описание", ВCamelCase(ИмяБиблиотеки)));
    КонецЕсли;

КонецПроцедуры

Функция ВCamelCase(Знач ВходнаяСтрока)
	
	// Удаляем все символы кроме латинских и кириллических
	Результат = "";
	Для Позиция = 1 По СтрДлина(ВходнаяСтрока) Цикл
		Символ = Сред(ВходнаяСтрока, Позиция, 1);
		Если ЭтоЛатинскийСимвол(Символ) Или ЭтоКириллическийСимвол(Символ) Тогда
			Результат = Результат + Символ;
		КонецЕсли;
	КонецЦикла;
	
	// Приводим к нижнему регистру
	Результат = НРег(Результат);
	
	// Если строка пустая, возвращаем пустую строку
	Если ПустаяСтрока(Результат) Тогда
		Возврат "";
	КонецЕсли;
	
	// Первый символ в нижнем регистре (уже сделано)
	// Теперь ищем места для заглавных букв - предполагаем, что слова разделены подчеркиваниями, дефисами или пробелами
	// Но поскольку мы уже убрали их, будем искать паттерны заглавных букв в оригинальной строке
	
	// Более простая реализация: если входная строка содержит разделители, обрабатываем их
	ВходнаяСтрока = СтрЗаменить(ВходнаяСтрока, " ", "");
	ВходнаяСтрока = СтрЗаменить(ВходнаяСтрока, "_", " ");
	ВходнаяСтрока = СтрЗаменить(ВходнаяСтрока, "-", " ");
	ВходнаяСтрока = СтрЗаменить(ВходнаяСтрока, ".", " ");
	
	// Разделяем по пробелам
	Слова = СтрРазделить(ВходнаяСтрока, " ");
	
	Если Слова.Количество() <= 1 Тогда
		// Если нет разделителей, просто возвращаем в нижнем регистре
		Возврат НРег(Результат);
	КонецЕсли;
	
	// Собираем слова в camelCase
	CamelCaseРезультат = НРег(Слова[0]);
	Для Индекс = 1 По Слова.ВГраница() Цикл
		Если Не ПустаяСтрока(Слова[Индекс]) Тогда
			Слово = Слова[Индекс];
			Если СтрДлина(Слово) > 0 Тогда
				// Первая буква в верхний регистр, остальное в нижний
				ПерваяБуква = ВРег(Лев(Слово, 1));
				ОстатокСлова = НРег(Сред(Слово, 2));
				// Оставляем только латинские и кириллические
				ОчищенноеСлово = "";
				Для ПозицияСлова = 1 По СтрДлина(ПерваяБуква + ОстатокСлова) Цикл
					СимволСлова = Сред(ПерваяБуква + ОстатокСлова, ПозицияСлова, 1);
					Если ЭтоЛатинскийСимвол(СимволСлова) Или ЭтоКириллическийСимвол(СимволСлова) Тогда
						ОчищенноеСлово = ОчищенноеСлово + СимволСлова;
					КонецЕсли;
				КонецЦикла;
				Если Не ПустаяСтрока(ОчищенноеСлово) Тогда
					CamelCaseРезультат = CamelCaseРезультат + ОчищенноеСлово;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат CamelCaseРезультат;
	
КонецФункции

Функция ЭтоЛатинскийСимвол(Символ)
	
	КодСимвола = КодСимвола(Символ);
	Возврат (КодСимвола >= 65 И КодСимвола <= 90) // Заглавные латинские A-Z
		Или (КодСимвола >= 97 И КодСимвола <= 122); // Строчные латинские a-z
	
КонецФункции

Функция ЭтоКириллическийСимвол(Символ)
	
	КодСимвола = КодСимвола(Символ);
	Возврат (КодСимвола >= 1040 И КодСимвола <= 1103) // Основная кириллица А-Я, а-я
		Или КодСимвола = 1025 Или КодСимвола = 1105; // Ё и ё
	
КонецФункции
