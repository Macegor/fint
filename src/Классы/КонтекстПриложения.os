
Перем Контекст;
Перем Контейнеры;
Перем ИменаПодключаемыхКомпонентов;
Перем ОписаниеТочкиВхода;

Процедура ПриСозданииОбъекта()
    
    Контекст = Новый Соответствие();
    ОписанияОбъектов = Новый Соответствие();
    Контейнеры = Новый Соответствие();
    ИменаПодключаемыхКомпонентов = Новый Массив();

    ИменаПодключаемыхКомпонентов.Добавить("Приложение");
    
КонецПроцедуры

Функция ОписаниеТочкиВхода() Экспорт
    Возврат ОписаниеТочкиВхода;
КонецФункции

Процедура Подключить(ИмяТипаОписанияПакета) Экспорт
    
    ИменаПодключаемыхКомпонентов.Добавить(ИмяТипаОписанияПакета);

КонецПроцедуры

Процедура ПодключитьБиблиотеку(ИмяТипаОписанияПакета) Экспорт
    
    МетаданныеБиблиотеки = МетаданныеБиблиотеки();

    Если ИмяТипаОписанияПакета = "Приложение" Тогда
        МетаданныеБиблиотеки.Имя = ИмяТипаОписанияПакета;
        МетаданныеБиблиотеки.Синоним = ИмяТипаОписанияПакета;
        МетаданныеБиблиотеки.КореневойКаталог = ТекущийКаталог();
    Иначе
        ОбъектБиблиотеки = Новый(ИмяТипаОписанияПакета);
        ОбъектБиблиотеки.ОписаниеБиблиотеки(МетаданныеБиблиотеки);
    КонецЕсли;

    КаталогПакета = МетаданныеБиблиотеки.КореневойКаталог;

    Сканер = Новый СканерПакетов(КаталогПакета);
    СоставПакетовБиблиотеки = Сканер.Просканировать();
    ПоследнийКонтекст = Неопределено;

    Для каждого Элемент Из СоставПакетовБиблиотеки Цикл
        ДобавитьПакетВКонтекст(Элемент, МетаданныеБиблиотеки.Имя, ПоследнийКонтекст);
    КонецЦикла;

КонецПроцедуры

Процедура Инициализировать() Экспорт
    
    Для каждого ИмяПакета Из ИменаПодключаемыхКомпонентов Цикл
        ПодключитьБиблиотеку(ИмяПакета);
    КонецЦикла;

    Рефлексия.ИнициализироватьТипы();

    Для каждого КонтейнерПакета Из Контейнеры Цикл

        КонтейнерПакета.Значение.ПодготовитьОбъекты();
        ОписаниеТочкиВходаКонтейнера = КонтейнерПакета.Значение.ОписаниеТочкиВхода();

        Если ОписаниеТочкиВхода <> Неопределено И ОписаниеТочкиВходаКонтейнера <> Неопределено Тогда
            ВызватьИсключение "У приложения не может быть несколько точек входа, убедитесь в том, что только один ваш объект помечен аннотацией ""ТочкаВхода""";
        КонецЕсли;

        Если ОписаниеТочкиВхода = Неопределено И ОписаниеТочкиВходаКонтейнера <> Неопределено Тогда
            ОписаниеТочкиВхода = ОписаниеТочкиВходаКонтейнера;
        КонецЕсли;
       
    КонецЦикла;

    Для каждого КонтейнерПакета Из Контейнеры Цикл

        ОбъектыКонтейнера = КонтейнерПакета.Значение.Объекты();

        Для каждого КлючЗначение Из ОбъектыКонтейнера Цикл
            
            ОписаниеТекущегоКласса = КлючЗначение.Значение;
            ОписаниеБазовогоКласса = ОписаниеТекущегоКласса.ОписаниеБазовогоКласса();

            Если ОписаниеБазовогоКласса = Неопределено Тогда
                Продолжить;
            КонецЕсли;

            МассивОписанийДочернихКлассов = Рефлексия.ПолучитьСвойство(ОписаниеБазовогоКласса, "ОписанияДочернихКлассов");
            МассивОписанийДочернихКлассов.Добавить(ОписаниеТекущегоКласса);

        КонецЦикла;

    КонецЦикла;

    Для каждого КонтейнерПакета Из Контейнеры Цикл
        КонтейнерПакета.Значение.СобратьИЗарегистрироватьОбъекты();
    КонецЦикла;

КонецПроцедуры

Функция ОписаниеОбъектаПоТипу(Тип) Экспорт

    Результат = Неопределено;

    Для каждого КонтейнерПакета Из Контейнеры Цикл

        ОбъектыПоТипу = КонтейнерПакета.Значение.ОбъектыПоТипу();
        Результат = ОбъектыПоТипу[Тип];

        Если Результат <> Неопределено Тогда
            Прервать;
        КонецЕсли;

    КонецЦикла;

    Возврат Результат;

КонецФункции

Функция ТипОбъекта(ИмяТипа, ПространствоИмен = "") Экспорт
    
    Контейнер = КонтейнерПакетаПоПути(ПространствоИмен);

    Возврат Контейнер.ТипОбъекта(ИмяТипа);

КонецФункции

Функция ОписаниеОбъекта(ИмяТипа, ПространствоИмен = "") Экспорт
    
    Контейнер = КонтейнерПакетаПоПути(ПространствоИмен);

    Возврат Контейнер.ОписаниеОбъекта(ИмяТипа);

КонецФункции

Функция ПолучитьОбъект(ИмяТипа, Знач ПространствоИмен = "") Экспорт
    
    Контейнер = КонтейнерПакетаПоПути(ПространствоИмен);
    Возврат Контейнер.СоздатьОбъект(ИмяТипа);

КонецФункции

Функция КонтейнерПакетаПоПути(Знач Путь)

    Если Путь = "" Тогда
        Путь = "Приложение";
    КонецЕсли;

    Контейнер = Контейнеры[Путь];

    Если Контейнер = Неопределено Тогда
        ВызватьИсключение СтрШаблон("Пространство имен %1 не найдено или пустое", Путь);
    КонецЕсли;

    Возврат Контейнер;

КонецФункции

Процедура ДобавитьПакетВКонтекст(ДанныеПакета, ИмяБиблиотеки, ПоследнийКонтекст = Неопределено, Знач Путь = "")
    
    КонтекстДобавления = ?(ПоследнийКонтекст = Неопределено, Контекст, ПоследнийКонтекст);
    СтруктураКонтекста = Новый Структура("Подпакеты, Контейнер", Новый Соответствие(), Неопределено);
    ИмяПакета = ИмяБиблиотеки;

    Если Путь = "" Тогда
        Путь = ИмяБиблиотеки;
    КонецЕсли;

    Если ДанныеПакета.Имя <> "Корень" Тогда
        Путь = Путь + "." + ДанныеПакета.Имя;
        ИмяПакета = ДанныеПакета.Имя;
    КонецЕсли;
   
    Если ДанныеПакета.Скрипты.Количество() Тогда
        СтруктураКонтекста.Контейнер = Новый КонтейнерПакета(ЭтотОбъект, ДанныеПакета.Скрипты, Путь);
        Контейнеры.Вставить(Путь, СтруктураКонтекста.Контейнер);
    КонецЕсли;

    Если ДанныеПакета.Подпакеты.Количество() Тогда
        Для каждого Подпакет Из ДанныеПакета.Подпакеты Цикл
            ДобавитьПакетВКонтекст(Подпакет, Подпакет.Имя, СтруктураКонтекста.Подпакеты, Путь);
        КонецЦикла;
    КонецЕсли;

    Если ДанныеПакета.Имя = "Корень"  Тогда
        ПоследнийКонтекст = СтруктураКонтекста.Подпакеты;
    КонецЕсли;
    
    КонтекстДобавления.Вставить(ИмяПакета, СтруктураКонтекста);

КонецПроцедуры

Функция МетаданныеБиблиотеки()
    
    Структура = Новый Структура();
    Структура.Вставить("Имя", "");
    Структура.Вставить("Синоним", "");
    Структура.Вставить("КореневойКаталог", "");

    Возврат Структура;

КонецФункции